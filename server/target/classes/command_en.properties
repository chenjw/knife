cd=enter object by id.
cd.object-id=a num as the object id.

clear=clear all the bytecode enhances and object holders. recover the agent to the time it just attached to the jvm.

close=close the agent from client.

cmd=update client command list.

decode=decode string from input code. can be used to input in unsupported encoding.
decode.string-to-decode=the string to be decoded.

do=do some test\u3002

find=find classes and instances from the heap.
find.find-expression=className or the object id.

gc=force jvm gc.

invoke=invoke a method of the target object.
invoke.invoke-expression=input 'package.ClassName.method(param1,param2)'; to invoke static method, or 'method(param1,param2)'; to invoke the method of target object. The params support json format.
invoke.-f=set <filter-expression> to filter the invocation output you dont care.
invoke.-t=is need output the method trace of the invocation.
invoke.-c=count methods

log=not support yet\u3002

ls=list fields and methods of the target object.
ls.classname=set <classname> to find static fields or methods , if <classname> not set , will apply to target object.
ls.-f=list fields.
ls.-m=list methods.
ls.-c=list constructs.
ls.-a=list array , list or map component.
ls.-d=to detail string.
ls.-j=to json string.
ls.-n=number of elements to return, effective only when the "-a" command, the default for all returns.

new=create a new instance of target class.
new.expression=like\uFF1A ConstructIndex(param1,param2)\u3002

prop=some knife settings.
prop.type=debug
prop.status=on/off

ref=find referrers or referrees of target object.
ref.object-id=a num as the object id.
ref.-r=find referree not Referrer.

set=set field value to target object.
set.fieldname=input 'package.TestClass.fieldName' means static field or 'fieldName' means both static and no-static field of target object.
set.new-value=an expretion which will transfer to object by json tool, or '@1' means direct the object by id.
set.-s=force set to static field, to avoid misunderstanding.

spring=create spring context.
spring.parent-id=parent spring context obj-id.
spring.file-path=spring xml file path.
	
top=find the top cpu-used thread. and the top mem-used object.
top.type=ref,thread
top.-n=top num,default is 10.

trace=trace an invocation on the target object.
trace.trace-expression=Input 'package.ClassName.method' to trace static method, or 'method' to trace the method of target object.
trace.-f=set <filter-expression> to filter the invocation output you dont care.
trace.-t=is need output the method trace of the invocation.
trace.-n=<trace-num> trace times.
trace.-c=count methods

view=view classloader or classfilename.
view.-c=view classloader.
view.-s=view class file name.

heap=view classloader or classfilename.
view.-c=view classloader.
view.-s=view class file name.

heap=show heap info
heap.-i=sort by heap increment bytes\uFF08default to sort by current bytes \uFF09\u3002
heap.-n=truncate num, default to 20
heap.-t=seconds to perf\uFF081s flush\uFF09\uFF0Cdefault to 5s\u3002

thread=show thread info
thread.-t=seconds to perf\uFF081s flush\uFF09\uFF0Cdefault to 5s\u3002